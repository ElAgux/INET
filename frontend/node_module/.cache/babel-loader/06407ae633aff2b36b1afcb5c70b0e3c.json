{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\vec2\\\\frontend\\\\src\\\\components\\\\ExportCSV.js\",\n    _s = $RefreshSig$();\n\nimport Button from '../shared/Button';\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction convertArrayOfObjectsToCSV(array) {\n  let result;\n  const columnDelimiter = ',';\n  const lineDelimiter = '\\n';\n  const keys = Object.keys(data[0]);\n  result = '';\n  result += keys.join(columnDelimiter);\n  result += lineDelimiter;\n  array.forEach(item => {\n    let ctr = 0;\n    keys.forEach(key => {\n      if (ctr > 0) result += columnDelimiter;\n      result += item[key];\n      ctr++;\n    });\n    result += lineDelimiter;\n  });\n  return result;\n} // Blatant \"inspiration\" from https://codepen.io/Jacqueline34/pen/pyVoWr\n\n\nfunction downloadCSV(array) {\n  const link = document.createElement('a');\n  let csv = convertArrayOfObjectsToCSV(array);\n  if (csv == null) return;\n  const filename = 'export.csv';\n\n  if (!csv.match(/^data:text\\/csv/i)) {\n    csv = `data:text/csv;charset=utf-8,${csv}`;\n  }\n\n  link.setAttribute('href', encodeURI(csv));\n  link.setAttribute('download', filename);\n  link.click();\n}\n\nconst Export = _ref => {\n  let {\n    onExport\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(Button, {\n    onClick: e => onExport(e.target.value),\n    children: \"Export\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 38\n  }, this);\n};\n\n_c = Export;\nexport const ExportCSV = () => {\n  _s();\n\n  const actionsMemo = React.useMemo(() => /*#__PURE__*/_jsxDEV(Export, {\n    onExport: () => downloadCSV(data)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 46\n  }, this), []);\n};\n\n_s(ExportCSV, \"8mHvhPk402K+vduJcPnfc/1Ppp4=\");\n\n_c2 = ExportCSV;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Export\");\n$RefreshReg$(_c2, \"ExportCSV\");","map":{"version":3,"names":["Button","React","convertArrayOfObjectsToCSV","array","result","columnDelimiter","lineDelimiter","keys","Object","data","join","forEach","item","ctr","key","downloadCSV","link","document","createElement","csv","filename","match","setAttribute","encodeURI","click","Export","onExport","e","target","value","ExportCSV","actionsMemo","useMemo"],"sources":["C:/xampp/htdocs/vec2/frontend/src/components/ExportCSV.js"],"sourcesContent":["import Button from '../shared/Button';\r\nimport React from 'react';\r\n\r\nfunction convertArrayOfObjectsToCSV(array) {\r\n\tlet result;\r\n\r\n    \tconst columnDelimiter = ',';\r\n    \tconst lineDelimiter = '\\n';\r\n    \tconst keys = Object.keys(data[0]);\r\n    \r\n    \tresult = '';\r\n    \tresult += keys.join(columnDelimiter);\r\n    \tresult += lineDelimiter;\r\n    \r\n    \tarray.forEach(item => {\r\n\t\tlet ctr = 0;\r\n    \tkeys.forEach(key => {\r\n    \t\tif (ctr > 0) result += columnDelimiter;\r\n    \r\n    \t\t\tresult += item[key];\r\n    \t\t\t\r\n    \t\t\tctr++;\r\n    \t\t});\r\n    \t\tresult += lineDelimiter;\r\n    \t});\r\n    \r\n    \treturn result;\r\n    }\r\n    \r\n    // Blatant \"inspiration\" from https://codepen.io/Jacqueline34/pen/pyVoWr\r\n    function downloadCSV(array) {\r\n    \tconst link = document.createElement('a');\r\n    \tlet csv = convertArrayOfObjectsToCSV(array);\r\n    \tif (csv == null) return;\r\n    \r\n    \tconst filename = 'export.csv';\r\n    \r\n    \tif (!csv.match(/^data:text\\/csv/i)) {\r\n    \t\tcsv = `data:text/csv;charset=utf-8,${csv}`;\r\n    \t}\r\n    \r\n    \tlink.setAttribute('href', encodeURI(csv));\r\n    \tlink.setAttribute('download', filename);\r\n    \tlink.click();\r\n\r\n    }\r\n    \r\n    \r\n    const Export = ({ onExport }) => <Button onClick={e => onExport(e.target.value)}>Export</Button>;\r\n\r\n    export const ExportCSV = () => {\r\n    \tconst actionsMemo = React.useMemo(() => <Export onExport={() => downloadCSV(data)} />, []);\r\n        }"],"mappings":";;;AAAA,OAAOA,MAAP,MAAmB,kBAAnB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AAEA,SAASC,0BAAT,CAAoCC,KAApC,EAA2C;EAC1C,IAAIC,MAAJ;EAEI,MAAMC,eAAe,GAAG,GAAxB;EACA,MAAMC,aAAa,GAAG,IAAtB;EACA,MAAMC,IAAI,GAAGC,MAAM,CAACD,IAAP,CAAYE,IAAI,CAAC,CAAD,CAAhB,CAAb;EAEAL,MAAM,GAAG,EAAT;EACAA,MAAM,IAAIG,IAAI,CAACG,IAAL,CAAUL,eAAV,CAAV;EACAD,MAAM,IAAIE,aAAV;EAEAH,KAAK,CAACQ,OAAN,CAAcC,IAAI,IAAI;IACzB,IAAIC,GAAG,GAAG,CAAV;IACGN,IAAI,CAACI,OAAL,CAAaG,GAAG,IAAI;MACnB,IAAID,GAAG,GAAG,CAAV,EAAaT,MAAM,IAAIC,eAAV;MAEZD,MAAM,IAAIQ,IAAI,CAACE,GAAD,CAAd;MAEAD,GAAG;IACH,CANF;IAOCT,MAAM,IAAIE,aAAV;EACA,CAVD;EAYA,OAAOF,MAAP;AACA,C,CAED;;;AACA,SAASW,WAAT,CAAqBZ,KAArB,EAA4B;EAC3B,MAAMa,IAAI,GAAGC,QAAQ,CAACC,aAAT,CAAuB,GAAvB,CAAb;EACA,IAAIC,GAAG,GAAGjB,0BAA0B,CAACC,KAAD,CAApC;EACA,IAAIgB,GAAG,IAAI,IAAX,EAAiB;EAEjB,MAAMC,QAAQ,GAAG,YAAjB;;EAEA,IAAI,CAACD,GAAG,CAACE,KAAJ,CAAU,kBAAV,CAAL,EAAoC;IACnCF,GAAG,GAAI,+BAA8BA,GAAI,EAAzC;EACA;;EAEDH,IAAI,CAACM,YAAL,CAAkB,MAAlB,EAA0BC,SAAS,CAACJ,GAAD,CAAnC;EACAH,IAAI,CAACM,YAAL,CAAkB,UAAlB,EAA8BF,QAA9B;EACAJ,IAAI,CAACQ,KAAL;AAEA;;AAGD,MAAMC,MAAM,GAAG;EAAA,IAAC;IAAEC;EAAF,CAAD;EAAA,oBAAkB,QAAC,MAAD;IAAQ,OAAO,EAAEC,CAAC,IAAID,QAAQ,CAACC,CAAC,CAACC,MAAF,CAASC,KAAV,CAA9B;IAAA;EAAA;IAAA;IAAA;IAAA;EAAA,QAAlB;AAAA,CAAf;;KAAMJ,M;AAEN,OAAO,MAAMK,SAAS,GAAG,MAAM;EAAA;;EAC9B,MAAMC,WAAW,GAAG9B,KAAK,CAAC+B,OAAN,CAAc,mBAAM,QAAC,MAAD;IAAQ,QAAQ,EAAE,MAAMjB,WAAW,CAACN,IAAD;EAAnC;IAAA;IAAA;IAAA;EAAA,QAApB,EAAmE,EAAnE,CAApB;AACI,CAFE;;GAAMqB,S;;MAAAA,S"},"metadata":{},"sourceType":"module"}