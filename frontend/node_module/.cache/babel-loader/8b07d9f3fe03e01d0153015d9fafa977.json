{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\vec2\\\\frontend\\\\src\\\\components\\\\ListPersona.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\nimport DataTable from 'react-data-table-component';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ListPersona = () => {\n  _s();\n\n  const [persona, setPersona] = useState([]);\n  /*const [personaSearch, setPersonaSearch] = useState([]);*/\n\n  let [currentPage, setCurrentPage] = useState(0); //const [ search, setSearch ] = useState(\"\")\n\n  const [pending, setPending] = React.useState(true);\n  const [rows, setRows] = React.useState([]);\n  const [filterText, setFilterText] = React.useState('');\n  const [resetPaginationToggle, setResetPaginationToggle] = React.useState(false);\n  const filteredItems = fakeUsers.filter(item => item.name && item.name.toLowerCase().includes(filterText.toLowerCase()));\n  let i;\n  useEffect(() => {\n    getPersona(); // getPersonaSearch();\n  }, []);\n  /*\r\n    const searcher = (e) => {\r\n      setSearch(e.target.value)   \r\n    }\r\n  \r\n      const nextPage = () => {\r\n      if(currentPage<=persona.length)\r\n      currentPage =currentPage+i;\r\n      setCurrentPage (currentPage);\r\n      getPersona(currentPage)\r\n      console.log(currentPage)\r\n    } \r\n  \r\n    const prevPage = () => {\r\n     if(currentPage>0)\r\n      currentPage =currentPage-i;\r\n      setCurrentPage (currentPage);\r\n      getPersona(currentPage)\r\n      console.log(currentPage)\r\n    }\r\n  \r\n    const getPersonaSearch = async () => {\r\n      const response = await axios.get(\"http://localhost:5000/persona\");\r\n      setPersonaSearch(response.data);\r\n    };\r\n  */\n\n  /*\r\n     const results = !search ? personaSearch : personaSearch.filter((dato)=> dato.nombre.toLowerCase().includes(search.toLocaleLowerCase()))\r\n     results.slice(currentPage, currentPage+i);\r\n  */\n\n  const getPersona = async () => {\n    const response = await axios.get(\"http://localhost:5000/persona\"); //setPersona(response.data.slice(currentPage, currentPage+i));\n\n    setPersona(response.data);\n  };\n\n  React.useEffect(() => {\n    const timeout = setTimeout(() => {\n      setRows(persona);\n      setPending(false);\n    }, 2000);\n    return () => clearTimeout(timeout);\n  }, []);\n  const columnas = [{\n    name: 'idPersona',\n    selector: 'idPersona',\n    sortable: true\n  }, {\n    name: 'email',\n    selector: 'email',\n    sortable: true\n  }, {\n    name: 'nombre',\n    selector: 'nombre',\n    sortable: true\n  }, {\n    name: 'apellido',\n    selector: 'apellido',\n    sortable: true\n  }, {\n    name: 'edad',\n    selector: 'edad',\n    sortable: true\n  }, {\n    name: 'sexo',\n    selector: 'sexo',\n    sortable: true\n  }];\n  return /*#__PURE__*/_jsxDEV(\"body\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        to: `add`,\n        className: \"button is-success\",\n        children: \"Add Persona\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(DataTable, {\n        pagination: true,\n        progressPending: pending,\n        columns: columnas,\n        data: persona\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 104,\n    columnNumber: 1\n  }, this);\n};\n\n_s(ListPersona, \"lQNglv5zvy4O82F8uQ49a0hhiWM=\");\n\n_c = ListPersona;\nexport default ListPersona;\n\nvar _c;\n\n$RefreshReg$(_c, \"ListPersona\");","map":{"version":3,"names":["React","useState","useEffect","axios","Link","DataTable","ListPersona","persona","setPersona","currentPage","setCurrentPage","pending","setPending","rows","setRows","filterText","setFilterText","resetPaginationToggle","setResetPaginationToggle","filteredItems","fakeUsers","filter","item","name","toLowerCase","includes","i","getPersona","response","get","data","timeout","setTimeout","clearTimeout","columnas","selector","sortable"],"sources":["C:/xampp/htdocs/vec2/frontend/src/components/ListPersona.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Link } from \"react-router-dom\";\r\nimport DataTable from 'react-data-table-component';\r\n\r\nconst ListPersona = () => {\r\n  const [persona, setPersona] = useState([]);\r\n  /*const [personaSearch, setPersonaSearch] = useState([]);*/\r\n  let[currentPage, setCurrentPage] = useState(0);\r\n  //const [ search, setSearch ] = useState(\"\")\r\n  const [pending, setPending] = React.useState(true);\r\n\tconst [rows, setRows] = React.useState([]);\r\n  const [filterText, setFilterText] = React.useState('');\r\n\tconst [resetPaginationToggle, setResetPaginationToggle] = React.useState(false);\r\n\tconst filteredItems = fakeUsers.filter(\r\n\t\titem => item.name && item.name.toLowerCase().includes(filterText.toLowerCase()),\r\n\t);\r\n  let i;\r\n\r\n  useEffect(() => {\r\n    getPersona();\r\n   // getPersonaSearch();\r\n  }, []);\r\n/*\r\n  const searcher = (e) => {\r\n    setSearch(e.target.value)   \r\n  }\r\n\r\n    const nextPage = () => {\r\n    if(currentPage<=persona.length)\r\n    currentPage =currentPage+i;\r\n    setCurrentPage (currentPage);\r\n    getPersona(currentPage)\r\n    console.log(currentPage)\r\n  } \r\n\r\n  const prevPage = () => {\r\n   if(currentPage>0)\r\n    currentPage =currentPage-i;\r\n    setCurrentPage (currentPage);\r\n    getPersona(currentPage)\r\n    console.log(currentPage)\r\n  }\r\n\r\n  const getPersonaSearch = async () => {\r\n    const response = await axios.get(\"http://localhost:5000/persona\");\r\n    setPersonaSearch(response.data);\r\n  };\r\n*/\r\n\r\n/*\r\n   const results = !search ? personaSearch : personaSearch.filter((dato)=> dato.nombre.toLowerCase().includes(search.toLocaleLowerCase()))\r\n   results.slice(currentPage, currentPage+i);\r\n*/\r\n\r\nconst getPersona = async () => {\r\n  const response = await axios.get(\"http://localhost:5000/persona\");\r\n  //setPersona(response.data.slice(currentPage, currentPage+i));\r\n  setPersona(response.data);\r\n};\r\n\r\nReact.useEffect(() => {\r\n  const timeout = setTimeout(() => {\r\n    setRows(persona);\r\n    setPending(false);\r\n  }, 2000);\r\n  return () => clearTimeout(timeout);\r\n}, []);\r\n\r\nconst columnas = [\r\n  {\r\n    name : 'idPersona',\r\n    selector : 'idPersona',\r\n    sortable : true\r\n  },\r\n  {\r\n    name : 'email',\r\n    selector : 'email',\r\n    sortable : true\r\n  },\r\n  {\r\n    name : 'nombre',\r\n    selector : 'nombre',\r\n    sortable : true\r\n  },\r\n  {\r\n    name : 'apellido',\r\n    selector : 'apellido',\r\n    sortable : true\r\n  },\r\n  {\r\n    name : 'edad',\r\n    selector : 'edad',\r\n    sortable : true\r\n  },\r\n  {\r\n    name : 'sexo',\r\n    selector : 'sexo',\r\n    sortable : true\r\n  }\r\n]\r\n\r\n  return (         \r\n<body>\r\n    <div>\r\n    <Link to={`add`} className=\"button is-success\">\r\n          Add Persona\r\n    </Link>\r\n      <DataTable\r\n      pagination\r\n      progressPending={pending}\r\n      columns={columnas}\r\n      data={persona} \r\n       />\r\n    </div>\r\n</body>\r\n\r\n  );\r\n};\r\n\r\n\r\nexport default ListPersona;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}