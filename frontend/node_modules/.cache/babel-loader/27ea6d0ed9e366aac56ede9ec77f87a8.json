{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\vec2\\\\frontend\\\\src\\\\components\\\\ListPersona.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\nimport DataTable from 'react-data-table-component';\nimport { CSVLink } from \"react-csv\";\nimport differenceBy from 'lodash/differenceBy'; //\"react-data-table-component\": \"^7.5.2\",   ES EL QUE FUNCIONA\n//\n//\"datatables.net\": \"^1.12.1\",      NO SE IMPLEMENTA, NO INSTALAR EN OTROS PROYECTOS\n//\"datatables.net-dt\": \"^1.12.1\",   NO SE IMPLEMENTA, NO INSTALAR EN OTROS PROYECTOS\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ListPersona = () => {\n  _s();\n\n  const [persona, setPersona] = useState([]);\n  const [searchTerm, setSearch] = useState(\"\");\n  let itemexport = 0;\n  /*const [personaSearch, setPersonaSearch] = useState([]);*/\n  //let[currentPage, setCurrentPage] = useState(0);\n  //const [ search, setSearch ] = useState(\"\")\n  //let i;\n\n  useEffect(() => {\n    getPersona(); // getPersonaSearch();\n  }, []);\n  /*\r\n    /*PAGINACION ECHA POR LOS CHICOS /* \r\n    const searcher = (e) => {\r\n      setSearch(e.target.value)   \r\n    }\r\n  \r\n      const nextPage = () => {\r\n      if(currentPage<=persona.length)\r\n      currentPage =currentPage+i;\r\n      setCurrentPage (currentPage);\r\n      getPersona(currentPage)\r\n      console.log(currentPage)\r\n    } \r\n  \r\n    const prevPage = () => {\r\n     if(currentPage>0)\r\n      currentPage =currentPage-i;\r\n      setCurrentPage (currentPage);\r\n      getPersona(currentPage)\r\n      console.log(currentPage)\r\n    }\r\n  \r\n    const getPersonaSearch = async () => {\r\n      const response = await axios.get(\"http://localhost:5000/persona\");\r\n      setPersonaSearch(response.data);\r\n    };\r\n  */\n\n  /*\r\n     const results = !search ? personaSearch : personaSearch.filter((dato)=> dato.nombre.toLowerCase().includes(search.toLocaleLowerCase()))\r\n     results.slice(currentPage, currentPage+i);\r\n  */\n\n  const getPersona = async () => {\n    const response = await axios.get(\"http://localhost:5000/persona\"); //setPersona(response.data.slice(currentPage, currentPage+i));\n\n    setPersona(response.data);\n  };\n\n  const columnas = [{\n    name: 'idPersona',\n    selector: 'idPersona',\n    sortable: true\n  }, {\n    name: 'email',\n    selector: 'email',\n    sortable: true\n  }, {\n    name: 'nombre',\n    selector: 'nombre',\n    sortable: true\n  }, {\n    name: 'apellido',\n    selector: 'apellido',\n    sortable: true\n  }, {\n    name: 'edad',\n    selector: 'edad',\n    sortable: true\n  }, {\n    name: 'sexo',\n    selector: 'sexo',\n    sortable: true\n  }, {\n    cell: persona => /*#__PURE__*/_jsxDEV(Link, {\n      to: `edit/${persona.idPersona}`,\n      className: \"button is-small is-info mr-2 icon-pencil\",\n      title: \"Editar\",\n      children: \"Editar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 24\n    }, this),\n    ignoreRowClick: true,\n    allowOverflow: true,\n    button: true\n  }];\n\n  const searcher = e => {\n    setSearch(e.target.value);\n  };\n\n  const [selectedRows, setSelectedRows] = useState([]);\n  const [toggleCleared, setToggleCleared] = useState(false);\n  const handleRowSelected = useCallback(state => {\n    setSelectedRows(state.selectedRows);\n  }, []);\n  const contextActions = React.useMemo(() => {\n    const handleDelete = () => {\n      if (window.confirm(`Are you sure you want to delete:\\r ${selectedRows.map(r => r.title)}?`)) {\n        setToggleCleared(!toggleCleared);\n        setPersona(differenceBy(persona, selectedRows, 'title'));\n      }\n    };\n\n    return /*#__PURE__*/_jsxDEV(\"input\", {\n      onClick: handleDelete,\n      style: {\n        backgroundColor: 'red'\n      },\n      icon: true,\n      children: \"Delete\"\n    }, \"delete\", false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 4\n    }, this);\n  }, [persona, selectedRows, toggleCleared]);\n  return (\n    /*#__PURE__*/\n\n    /*PAGINACION DE FRAME DATATABLE*/\n    _jsxDEV(\"body\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"searchTerm\",\n          id: \"searchTerm\",\n          onChange: searcher\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: `add`,\n          className: \"button is-success\",\n          children: \"Nuevo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(CSVLink, {\n          data: persona,\n          className: \"button is-success\",\n          filename: \"VEC2_personas.csv\",\n          children: \"Exportar campos seleccionados CSV\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(DataTable, {\n          pagination: true,\n          selectableRows: true,\n          contextActions: contextActions,\n          onSelectedRowsChange: handleRowSelected,\n          clearSelectedRows: toggleCleared,\n          columns: columnas,\n          data: persona.filter(item => {\n            if (searchTerm === \"\") {\n              return item;\n            } else if (item.nombre.toLowerCase().includes(searchTerm.toLowerCase()) || item.email.toLowerCase().includes(searchTerm.toLowerCase()) || item.apellido.toLowerCase().includes(searchTerm.toLowerCase())) {\n              itemexport = item;\n              return item;\n            }\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 1\n    }, this)\n  );\n};\n\n_s(ListPersona, \"MpP/rWPqDd1ezQWD2moDI2fpjOs=\");\n\n_c = ListPersona;\nexport default ListPersona;\n\nvar _c;\n\n$RefreshReg$(_c, \"ListPersona\");","map":{"version":3,"names":["React","useState","useEffect","axios","Link","DataTable","CSVLink","differenceBy","ListPersona","persona","setPersona","searchTerm","setSearch","itemexport","getPersona","response","get","data","columnas","name","selector","sortable","cell","idPersona","ignoreRowClick","allowOverflow","button","searcher","e","target","value","selectedRows","setSelectedRows","toggleCleared","setToggleCleared","handleRowSelected","useCallback","state","contextActions","useMemo","handleDelete","window","confirm","map","r","title","backgroundColor","filter","item","nombre","toLowerCase","includes","email","apellido"],"sources":["C:/xampp/htdocs/vec2/frontend/src/components/ListPersona.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Link } from \"react-router-dom\";\r\nimport DataTable from 'react-data-table-component';\r\nimport { CSVLink} from \"react-csv\";\r\nimport differenceBy from 'lodash/differenceBy';\r\n\r\n//\"react-data-table-component\": \"^7.5.2\",   ES EL QUE FUNCIONA\r\n//\r\n//\"datatables.net\": \"^1.12.1\",      NO SE IMPLEMENTA, NO INSTALAR EN OTROS PROYECTOS\r\n//\"datatables.net-dt\": \"^1.12.1\",   NO SE IMPLEMENTA, NO INSTALAR EN OTROS PROYECTOS\r\n\r\nconst ListPersona = () => {\r\n  const [persona, setPersona] = useState([]);\r\n  const [ searchTerm, setSearch ] = useState(\"\")\r\n  let itemexport = 0;\r\n  /*const [personaSearch, setPersonaSearch] = useState([]);*/\r\n  //let[currentPage, setCurrentPage] = useState(0);\r\n  //const [ search, setSearch ] = useState(\"\")\r\n\t\r\n  //let i;\r\n\r\n  useEffect(() => {\r\n    getPersona();\r\n   // getPersonaSearch();\r\n  }, []);\r\n/*\r\n  /*PAGINACION ECHA POR LOS CHICOS /* \r\n  const searcher = (e) => {\r\n    setSearch(e.target.value)   \r\n  }\r\n\r\n    const nextPage = () => {\r\n    if(currentPage<=persona.length)\r\n    currentPage =currentPage+i;\r\n    setCurrentPage (currentPage);\r\n    getPersona(currentPage)\r\n    console.log(currentPage)\r\n  } \r\n\r\n  const prevPage = () => {\r\n   if(currentPage>0)\r\n    currentPage =currentPage-i;\r\n    setCurrentPage (currentPage);\r\n    getPersona(currentPage)\r\n    console.log(currentPage)\r\n  }\r\n\r\n  const getPersonaSearch = async () => {\r\n    const response = await axios.get(\"http://localhost:5000/persona\");\r\n    setPersonaSearch(response.data);\r\n  };\r\n*/\r\n\r\n/*\r\n   const results = !search ? personaSearch : personaSearch.filter((dato)=> dato.nombre.toLowerCase().includes(search.toLocaleLowerCase()))\r\n   results.slice(currentPage, currentPage+i);\r\n*/\r\n\r\nconst getPersona = async () => {\r\n  const response = await axios.get(\"http://localhost:5000/persona\");\r\n  //setPersona(response.data.slice(currentPage, currentPage+i));\r\n  setPersona(response.data);\r\n};\r\n\r\nconst columnas = [\r\n  {\r\n    name : 'idPersona',\r\n    selector : 'idPersona',\r\n    sortable : true\r\n  },\r\n  {\r\n    name : 'email',\r\n    selector : 'email',\r\n    sortable : true\r\n  },\r\n  {\r\n    name : 'nombre',\r\n    selector : 'nombre',\r\n    sortable : true\r\n  },\r\n  {\r\n    name : 'apellido',\r\n    selector : 'apellido',\r\n    sortable : true\r\n  },\r\n  {\r\n    name : 'edad',\r\n    selector : 'edad',\r\n    sortable : true\r\n  },\r\n  {\r\n    name : 'sexo',\r\n    selector : 'sexo',\r\n    sortable : true\r\n  },\r\n  {\r\n    cell: (persona) => <Link to={`edit/${persona.idPersona}`}\r\n    className=\"button is-small is-info mr-2 icon-pencil\"\r\n    title=\"Editar\">Editar</Link>,\r\n    ignoreRowClick: true,\r\n    allowOverflow: true,\r\n    button: true,\r\n\r\n  }\r\n  \r\n]\r\n\r\nconst searcher = (e) => {\r\n  setSearch(e.target.value)   \r\n}\r\n\r\nconst [selectedRows, setSelectedRows] = useState([]);\r\nconst [toggleCleared, setToggleCleared] = useState(false);\r\n\r\n\r\n\tconst handleRowSelected = useCallback(state => {\r\n\t\tsetSelectedRows(state.selectedRows);\r\n\t}, []);\r\n\r\n\tconst contextActions = React.useMemo(() => {\r\n\t\tconst handleDelete = () => {\r\n\t\t\t\r\n\t\t\tif (window.confirm(`Are you sure you want to delete:\\r ${selectedRows.map(r => r.title)}?`)) {\r\n\t\t\t\tsetToggleCleared(!toggleCleared);\r\n\t\t\t\tsetPersona(differenceBy(persona, selectedRows, 'title'));\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\treturn (\r\n\t\t\t<input key=\"delete\" onClick={handleDelete} style={{ backgroundColor: 'red' }} icon>\r\n\t\t\t\tDelete\r\n\t\t\t</input>\r\n\t\t);\r\n\t}, [persona, selectedRows, toggleCleared]);\r\n\r\n  return (\r\n    /*PAGINACION DE FRAME DATATABLE*/        \r\n<body>\r\n    <div>\r\n\r\n    <input type=\"text\" name=\"searchTerm\" id=\"searchTerm\" onChange={searcher}></input>\r\n    <Link to={`add`} className=\"button is-success\">\r\n    Nuevo</Link>\r\n    <CSVLink data={persona} className=\"button is-success\" filename={\"VEC2_personas.csv\"}>Exportar campos seleccionados CSV</CSVLink>\r\n      <DataTable\r\n      pagination\r\n      selectableRows\r\n      contextActions={contextActions}\r\n\t\t\tonSelectedRowsChange={handleRowSelected}\r\n\t\t\tclearSelectedRows={toggleCleared}\r\n      columns={columnas}\r\n      data={persona.filter((item) => {\r\n        if (searchTerm === \"\") {\r\n          return item;\r\n        } else if (\r\n          item.nombre.toLowerCase().includes(searchTerm.toLowerCase()) || item.email.toLowerCase().includes(searchTerm.toLowerCase()) || item.apellido.toLowerCase().includes(searchTerm.toLowerCase())\r\n        ) {\r\n          itemexport = item;\r\n          return item;\r\n        }\r\n      })} \r\n       />\r\n    </div>\r\n</body>\r\n\r\n  );\r\n};\r\n\r\n\r\nexport default ListPersona;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}